{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"hands-on/react/react/","text":"React\u3067\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u69cb\u7bc9\u3059\u308b \u4f5c\u6210\u3057\u305fAppSync\u306b\u3092\u5229\u7528\u3059\u308b\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092React\u3067\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002 TODO: React\u306b\u95a2\u3059\u308b\u7c21\u5358\u306a\u8aac\u660e Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum Create React App\u3092\u4f7f\u3063\u3066\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b Create React App\uff08CRA\uff09\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u4efb\u610f\u306e\u4f5c\u696d\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u5f8c\u3001\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 npx create-react-app@3.4.1 --template typescript react-appsync-protected-by-auth0 cd react-appsync-protected-by-auth0 React Router\u3068Auth0\u306eSPA\u7528SDK\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 yarn add react-router-dom@5.1.2 @auth0/auth0-spa-js@1.8.1 yarn add -D @types/react-router-dom@5.1.2 Auth0\u3092React\u3067\u5229\u7528\u3059\u308b\u70ba\u306eCustom Hook\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 // ./src/react-auth0-spa.tsx import React from 'react' ; import createAuth0Client , { Auth0Client , Auth0ClientOptions , getIdTokenClaimsOptions , GetTokenSilentlyOptions , GetTokenWithPopupOptions , IdToken , LogoutOptions , PopupConfigOptions , PopupLoginOptions , RedirectLoginOptions , } from '@auth0/auth0-spa-js' ; type Auth0ContextOptions = { isAuthenticated : boolean ; user : any ; loading : boolean ; popupOpen : boolean ; loginWithPopup : ( options? : PopupLoginOptions , config? : PopupConfigOptions ) => Promise < void > ; handleRedirectCallback : ( path? : string ) => Promise < void > ; getIdTokenClaims : ( options? : getIdTokenClaimsOptions ) => Promise < IdToken > ; loginWithRedirect : ( options? : RedirectLoginOptions ) => Promise < void > ; getTokenSilently : ( options? : GetTokenSilentlyOptions ) => Promise < any > ; getTokenWithPopup : ( options? : GetTokenWithPopupOptions , config? : PopupConfigOptions ) => Promise < string > ; logout : ( options? : LogoutOptions ) => void ; } export type Auth0ProviderOptions = Auth0ClientOptions & { children : React.ReactElement ; onRedirectCallback : Auth0ContextOptions [ 'handleRedirectCallback' ]; } export const Auth0Context = React . createContext ({} as Auth0ContextOptions ); export const useAuth0 = () => React . useContext < Auth0ContextOptions > ( Auth0Context ); export const Auth0Provider : React.FC < Auth0ProviderOptions > = ( { children , onRedirectCallback , ... initOptions } ) => { const [ isAuthenticated , setIsAuthenticated ] = React . useState < boolean > ( false ); const [ user , setUser ] = React . useState < any > ( null ); const [ auth0Client , setAuth0 ] = React . useState < Auth0Client > (); const [ loading , setLoading ] = React . useState < boolean > ( true ); const [ popupOpen , setPopupOpen ] = React . useState < boolean > ( false ); React . useEffect (() => { const initAuth0 = async () => { const auth0FromHook = await createAuth0Client ( initOptions ); setAuth0 ( auth0FromHook ); if ( window . location . search . includes ( 'code=' ) && window . location . search . includes ( 'state=' )) { const { appState } = await auth0FromHook . handleRedirectCallback (); await onRedirectCallback ( appState ? . targetUrl ); } const isAuthenticated = await auth0FromHook . isAuthenticated (); setIsAuthenticated ( isAuthenticated ); if ( isAuthenticated ) { const user = await auth0FromHook . getUser (); setUser ( user ); } setLoading ( false ); }; initAuth0 (); // eslint-disable-next-line }, []); const loginWithPopup : Auth0ContextOptions [ 'loginWithPopup' ] = async ( options , config ) => { setPopupOpen ( true ); try { await auth0Client ! . loginWithPopup ( options , config ); } catch ( error ) { console . error ( error ); } finally { setPopupOpen ( false ); } const user = await auth0Client ! . getUser (); setUser ( user ); setIsAuthenticated ( true ); }; const handleRedirectCallback : Auth0ContextOptions [ 'handleRedirectCallback' ] = async ( url ) => { setLoading ( true ); await auth0Client ! . handleRedirectCallback ( url ); const user = await auth0Client ! . getUser (); setLoading ( false ); setIsAuthenticated ( true ); setUser ( user ); }; return ( < Auth0Context . Provider value = {{ isAuthenticated , user , loading , popupOpen , loginWithPopup , handleRedirectCallback , getIdTokenClaims : ( options ) => auth0Client ! . getIdTokenClaims ( options ), loginWithRedirect : ( options ) => auth0Client ! . loginWithRedirect ( options ), getTokenSilently : ( options ) => auth0Client ! . getTokenSilently ( options ), getTokenWithPopup : ( options , config ) => auth0Client ! . getTokenWithPopup ( options , config ), logout : ( options ) => auth0Client ! . logout ( options ) }} > { children } < /Auth0Context.Provider> ); }; \u30ed\u30b0\u30a4\u30f3\uff0f\u30ed\u30b0\u30a2\u30a6\u30c8\u64cd\u4f5c\u3092\u884c\u308f\u305b\u308b\u70ba\u306bNavBar\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 // ./src/components/NavBar.tsx import React from \"react\" ; import { useAuth0 } from \"../react-auth0-spa\" ; export const NavBar = () => { const { isAuthenticated , loginWithRedirect , logout } = useAuth0 (); return ( < div > { ! isAuthenticated && ( < button onClick = {() => loginWithRedirect ({})} > Log in < /button> )} { isAuthenticated && < button onClick = {() => logout ()} > Log out < /button>} < /div> ); }; history\u3092\u751f\u6210\u3057\u3001\u3069\u3053\u304b\u3089\u3067\u3082\u30a2\u30af\u30bb\u30b9\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 TODO: \u3053\u306e\u90e8\u5206\u306e\u8aac\u660e\u304c\u602a\u3057\u3044 useHistory() Hook\u3092\u4f7f\u308f\u305a\u306b\u3001createBrowserHistory()\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u524d\u8005\u306fRoute\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u914d\u4e0b\u3067\u3057\u304b\u4f7f\u3048\u306a\u3044\u304c\u3001\u5f8c\u8005\u306f\u3069\u3053\u3067\u3082\u4f7f\u3048\u308b\uff08\u5c11\u306a\u304f\u3068\u3082push\u306e\u5b9a\u7fa9\u306f\u51fa\u6765\u308b\uff09\u304b\u3089\u3067\u3059\u3002 import { createBrowserHistory } from \"history\" ; export const history = createBrowserHistory (); Auth0\u306e\u8a2d\u5b9a\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u53d6\u308a\u8fbc\u3081\u308b\u3088\u3046\u306bJSON\u5f62\u5f0f\u3067\u4fdd\u5b58\u3057\u307e\u3059\u3002\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u3001Auth0\u306eApplication\u5b9a\u7fa9\u306eSettings\u30bf\u30d6\u304b\u3089Domain\u3068Client ID\u3092\u8ee2\u8a18\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306a\u306e\u3067\u3001\u74b0\u5883\uff08dev/stg/prd\uff09\u5dee\u5206\u3092\u8003\u616e\u305b\u305a\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u30cf\u30fc\u30c9\u30b3\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 # ./src/auth-config.json { \"domain\" : \"YOUR_DOMAIN\" , \"clientId\" : \"YOUR_CLIENT_ID\" } \u4f5c\u6210\u3057\u305fAuth0 Custom Hook\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u7d50\u5408\u3055\u305b\u308b\u70ba\u306b\u3001 index.tsx \u3092\u7de8\u96c6\u3057\u307e\u3059\u3002 // ./src/index.tsx import React from 'react' ; import ReactDOM from 'react-dom' ; import { App } from './App' ; import * as serviceWorker from './serviceWorker' ; import { history } from './utils/history' ; import { Auth0Provider } from \"./react-auth0-spa\" ; import config from \"./auth_config.json\" ; const onRedirectCallback = async ( url? : string ) => { history . push ( url ?? window . location . pathname ); }; ReactDOM . render ( < React . StrictMode > < Auth0Provider domain = { config . domain } client_id = { config . clientId } redirect_uri = { window . location . origin } onRedirectCallback = { onRedirectCallback } > < App /> < /Auth0Provider> < /React.StrictMode>, document . getElementById ( 'root' ) ); // If you want your app to work offline and load faster, you can change // unregister() to register() below. Note this comes with some pitfalls. // Learn more about service workers: https://bit.ly/CRA-PWA serviceWorker . unregister (); CRA\u3067\u751f\u6210\u3055\u308c\u305fCSS\u7b49\u4f7f\u308f\u306a\u3044\u306e\u3067\u524a\u9664\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002 logo.svg index.tsx index.css App.css App.test.tsx \u30d1\u30fc\u30c8\uff11\u306f\u3053\u3053\u307e\u3067\u3067\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u304c\u51fa\u6765\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u307e\u305a\u3001\u30c6\u30b9\u30c8\u7528\u306e\u30e6\u30fc\u30b6\u30fc\u3092Auth0\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002Auth0\u306eDashbord\u3092\u958b\u304d\u3001 Users & Roles \u3001 Users \u3068\u30e1\u30cb\u30e5\u30fc\u3092\u9078\u629e\u3057\u3001 CREATE USER \u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30e6\u30fc\u30b6\u30fc\u306eEmail\u3068Password\u3092\u5165\u529b\u3057\u3001 CREATE \u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30d9\u30ea\u30d5\u30a1\u30a4\u306e\u30e1\u30fc\u30eb\u304c\u5c4a\u304f\u306e\u3067\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u3092\u4f7f\u7528\u53ef\u80fd\u306a\u72b6\u614b\u306b\u9077\u79fb\u3055\u305b\u307e\u3059\u3002 \u30e6\u30fc\u30b6\u30fc\u306e\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u30ed\u30b0\u30a4\u30f3\u304c\u884c\u3048\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30d6\u30e9\u30a6\u30b6\u3067 http://loclahost:3000 \u304c\u958b\u304d\u307e\u3059\u3002\u81ea\u52d5\u3067\u30d6\u30e9\u30a6\u30b6\u304c\u958b\u304b\u306a\u3044\u5834\u5408\u306f\u624b\u52d5\u3067URL\u3092\u5165\u529b\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u304f\u3060\u3055\u3044\u3002 yarn start \u30d6\u30e9\u30a6\u30b6\u3067\u7d20\u6734\u306a\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001Log in\u30dc\u30bf\u30f3\u3092\u9078\u629e\u3057\u307e\u3059\u3002 Auth0\u306e\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u306e\u3067\u3001\u30c6\u30b9\u30c8\u30e6\u30fc\u30b6\u30fc\u306eEmail\u3068Password\u3092\u5165\u529b\u3057\u3001 LOG IN \u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3059\u308b\u8a8d\u53ef\u3092\u78ba\u8a8d\u3055\u308c\u308b\u306e\u3067\u30c1\u30a7\u30c3\u30af\u30a2\u30a4\u30b3\u30f3\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30a2\u30a4\u30b3\u30f3\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u306d\u3002 \u4e00\u77ac\u3001 Loading... \u3068\u8868\u793a\u3055\u308c\u305f\u5f8c\u306b\u3001 Log out \u30dc\u30bf\u30f3\u3060\u3051\u306e\u7d20\u6734\u306a\u753b\u9762\u306b\u623b\u308c\u3070\u6210\u529f\u3067\u3059\u3002 Log out \u3092\u9078\u629e\u3057\u3066\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u4ee5\u964d\u3082\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7de8\u96c6\u3059\u308b\u524d\u306b\u306f\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u304b\u3089\u884c\u3044\u307e\u3059\u3002\u7279\u306b\u30d1\u30fc\u30c8\uff14\u3067 audience \u3092\u8a2d\u5b9a\u3059\u308b\u969b\u306b\u306f\u4e8b\u524d\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u304c\u5fc5\u9808\u3067\u3059\u3002","title":"React\u3067\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u69cb\u7bc9\u3059\u308b"},{"location":"hands-on/react/react/#react","text":"\u4f5c\u6210\u3057\u305fAppSync\u306b\u3092\u5229\u7528\u3059\u308b\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092React\u3067\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002 TODO: React\u306b\u95a2\u3059\u308b\u7c21\u5358\u306a\u8aac\u660e Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum","title":"React\u3067\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u69cb\u7bc9\u3059\u308b"},{"location":"hands-on/react/react/#create-react-app","text":"Create React App\uff08CRA\uff09\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u4efb\u610f\u306e\u4f5c\u696d\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u79fb\u52d5\u5f8c\u3001\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 npx create-react-app@3.4.1 --template typescript react-appsync-protected-by-auth0 cd react-appsync-protected-by-auth0 React Router\u3068Auth0\u306eSPA\u7528SDK\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 yarn add react-router-dom@5.1.2 @auth0/auth0-spa-js@1.8.1 yarn add -D @types/react-router-dom@5.1.2 Auth0\u3092React\u3067\u5229\u7528\u3059\u308b\u70ba\u306eCustom Hook\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 // ./src/react-auth0-spa.tsx import React from 'react' ; import createAuth0Client , { Auth0Client , Auth0ClientOptions , getIdTokenClaimsOptions , GetTokenSilentlyOptions , GetTokenWithPopupOptions , IdToken , LogoutOptions , PopupConfigOptions , PopupLoginOptions , RedirectLoginOptions , } from '@auth0/auth0-spa-js' ; type Auth0ContextOptions = { isAuthenticated : boolean ; user : any ; loading : boolean ; popupOpen : boolean ; loginWithPopup : ( options? : PopupLoginOptions , config? : PopupConfigOptions ) => Promise < void > ; handleRedirectCallback : ( path? : string ) => Promise < void > ; getIdTokenClaims : ( options? : getIdTokenClaimsOptions ) => Promise < IdToken > ; loginWithRedirect : ( options? : RedirectLoginOptions ) => Promise < void > ; getTokenSilently : ( options? : GetTokenSilentlyOptions ) => Promise < any > ; getTokenWithPopup : ( options? : GetTokenWithPopupOptions , config? : PopupConfigOptions ) => Promise < string > ; logout : ( options? : LogoutOptions ) => void ; } export type Auth0ProviderOptions = Auth0ClientOptions & { children : React.ReactElement ; onRedirectCallback : Auth0ContextOptions [ 'handleRedirectCallback' ]; } export const Auth0Context = React . createContext ({} as Auth0ContextOptions ); export const useAuth0 = () => React . useContext < Auth0ContextOptions > ( Auth0Context ); export const Auth0Provider : React.FC < Auth0ProviderOptions > = ( { children , onRedirectCallback , ... initOptions } ) => { const [ isAuthenticated , setIsAuthenticated ] = React . useState < boolean > ( false ); const [ user , setUser ] = React . useState < any > ( null ); const [ auth0Client , setAuth0 ] = React . useState < Auth0Client > (); const [ loading , setLoading ] = React . useState < boolean > ( true ); const [ popupOpen , setPopupOpen ] = React . useState < boolean > ( false ); React . useEffect (() => { const initAuth0 = async () => { const auth0FromHook = await createAuth0Client ( initOptions ); setAuth0 ( auth0FromHook ); if ( window . location . search . includes ( 'code=' ) && window . location . search . includes ( 'state=' )) { const { appState } = await auth0FromHook . handleRedirectCallback (); await onRedirectCallback ( appState ? . targetUrl ); } const isAuthenticated = await auth0FromHook . isAuthenticated (); setIsAuthenticated ( isAuthenticated ); if ( isAuthenticated ) { const user = await auth0FromHook . getUser (); setUser ( user ); } setLoading ( false ); }; initAuth0 (); // eslint-disable-next-line }, []); const loginWithPopup : Auth0ContextOptions [ 'loginWithPopup' ] = async ( options , config ) => { setPopupOpen ( true ); try { await auth0Client ! . loginWithPopup ( options , config ); } catch ( error ) { console . error ( error ); } finally { setPopupOpen ( false ); } const user = await auth0Client ! . getUser (); setUser ( user ); setIsAuthenticated ( true ); }; const handleRedirectCallback : Auth0ContextOptions [ 'handleRedirectCallback' ] = async ( url ) => { setLoading ( true ); await auth0Client ! . handleRedirectCallback ( url ); const user = await auth0Client ! . getUser (); setLoading ( false ); setIsAuthenticated ( true ); setUser ( user ); }; return ( < Auth0Context . Provider value = {{ isAuthenticated , user , loading , popupOpen , loginWithPopup , handleRedirectCallback , getIdTokenClaims : ( options ) => auth0Client ! . getIdTokenClaims ( options ), loginWithRedirect : ( options ) => auth0Client ! . loginWithRedirect ( options ), getTokenSilently : ( options ) => auth0Client ! . getTokenSilently ( options ), getTokenWithPopup : ( options , config ) => auth0Client ! . getTokenWithPopup ( options , config ), logout : ( options ) => auth0Client ! . logout ( options ) }} > { children } < /Auth0Context.Provider> ); }; \u30ed\u30b0\u30a4\u30f3\uff0f\u30ed\u30b0\u30a2\u30a6\u30c8\u64cd\u4f5c\u3092\u884c\u308f\u305b\u308b\u70ba\u306bNavBar\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 // ./src/components/NavBar.tsx import React from \"react\" ; import { useAuth0 } from \"../react-auth0-spa\" ; export const NavBar = () => { const { isAuthenticated , loginWithRedirect , logout } = useAuth0 (); return ( < div > { ! isAuthenticated && ( < button onClick = {() => loginWithRedirect ({})} > Log in < /button> )} { isAuthenticated && < button onClick = {() => logout ()} > Log out < /button>} < /div> ); }; history\u3092\u751f\u6210\u3057\u3001\u3069\u3053\u304b\u3089\u3067\u3082\u30a2\u30af\u30bb\u30b9\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 TODO: \u3053\u306e\u90e8\u5206\u306e\u8aac\u660e\u304c\u602a\u3057\u3044 useHistory() Hook\u3092\u4f7f\u308f\u305a\u306b\u3001createBrowserHistory()\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u524d\u8005\u306fRoute\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u914d\u4e0b\u3067\u3057\u304b\u4f7f\u3048\u306a\u3044\u304c\u3001\u5f8c\u8005\u306f\u3069\u3053\u3067\u3082\u4f7f\u3048\u308b\uff08\u5c11\u306a\u304f\u3068\u3082push\u306e\u5b9a\u7fa9\u306f\u51fa\u6765\u308b\uff09\u304b\u3089\u3067\u3059\u3002 import { createBrowserHistory } from \"history\" ; export const history = createBrowserHistory (); Auth0\u306e\u8a2d\u5b9a\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u53d6\u308a\u8fbc\u3081\u308b\u3088\u3046\u306bJSON\u5f62\u5f0f\u3067\u4fdd\u5b58\u3057\u307e\u3059\u3002\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u3001Auth0\u306eApplication\u5b9a\u7fa9\u306eSettings\u30bf\u30d6\u304b\u3089Domain\u3068Client ID\u3092\u8ee2\u8a18\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306a\u306e\u3067\u3001\u74b0\u5883\uff08dev/stg/prd\uff09\u5dee\u5206\u3092\u8003\u616e\u305b\u305a\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u30cf\u30fc\u30c9\u30b3\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 # ./src/auth-config.json { \"domain\" : \"YOUR_DOMAIN\" , \"clientId\" : \"YOUR_CLIENT_ID\" } \u4f5c\u6210\u3057\u305fAuth0 Custom Hook\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u7d50\u5408\u3055\u305b\u308b\u70ba\u306b\u3001 index.tsx \u3092\u7de8\u96c6\u3057\u307e\u3059\u3002 // ./src/index.tsx import React from 'react' ; import ReactDOM from 'react-dom' ; import { App } from './App' ; import * as serviceWorker from './serviceWorker' ; import { history } from './utils/history' ; import { Auth0Provider } from \"./react-auth0-spa\" ; import config from \"./auth_config.json\" ; const onRedirectCallback = async ( url? : string ) => { history . push ( url ?? window . location . pathname ); }; ReactDOM . render ( < React . StrictMode > < Auth0Provider domain = { config . domain } client_id = { config . clientId } redirect_uri = { window . location . origin } onRedirectCallback = { onRedirectCallback } > < App /> < /Auth0Provider> < /React.StrictMode>, document . getElementById ( 'root' ) ); // If you want your app to work offline and load faster, you can change // unregister() to register() below. Note this comes with some pitfalls. // Learn more about service workers: https://bit.ly/CRA-PWA serviceWorker . unregister (); CRA\u3067\u751f\u6210\u3055\u308c\u305fCSS\u7b49\u4f7f\u308f\u306a\u3044\u306e\u3067\u524a\u9664\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002 logo.svg index.tsx index.css App.css App.test.tsx \u30d1\u30fc\u30c8\uff11\u306f\u3053\u3053\u307e\u3067\u3067\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u304c\u51fa\u6765\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002 \u307e\u305a\u3001\u30c6\u30b9\u30c8\u7528\u306e\u30e6\u30fc\u30b6\u30fc\u3092Auth0\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002Auth0\u306eDashbord\u3092\u958b\u304d\u3001 Users & Roles \u3001 Users \u3068\u30e1\u30cb\u30e5\u30fc\u3092\u9078\u629e\u3057\u3001 CREATE USER \u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30e6\u30fc\u30b6\u30fc\u306eEmail\u3068Password\u3092\u5165\u529b\u3057\u3001 CREATE \u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30d9\u30ea\u30d5\u30a1\u30a4\u306e\u30e1\u30fc\u30eb\u304c\u5c4a\u304f\u306e\u3067\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u3092\u4f7f\u7528\u53ef\u80fd\u306a\u72b6\u614b\u306b\u9077\u79fb\u3055\u305b\u307e\u3059\u3002 \u30e6\u30fc\u30b6\u30fc\u306e\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u30ed\u30b0\u30a4\u30f3\u304c\u884c\u3048\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30d6\u30e9\u30a6\u30b6\u3067 http://loclahost:3000 \u304c\u958b\u304d\u307e\u3059\u3002\u81ea\u52d5\u3067\u30d6\u30e9\u30a6\u30b6\u304c\u958b\u304b\u306a\u3044\u5834\u5408\u306f\u624b\u52d5\u3067URL\u3092\u5165\u529b\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3057\u3066\u304f\u3060\u3055\u3044\u3002 yarn start \u30d6\u30e9\u30a6\u30b6\u3067\u7d20\u6734\u306a\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001Log in\u30dc\u30bf\u30f3\u3092\u9078\u629e\u3057\u307e\u3059\u3002 Auth0\u306e\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u306e\u3067\u3001\u30c6\u30b9\u30c8\u30e6\u30fc\u30b6\u30fc\u306eEmail\u3068Password\u3092\u5165\u529b\u3057\u3001 LOG IN \u3092\u9078\u629e\u3057\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3059\u308b\u8a8d\u53ef\u3092\u78ba\u8a8d\u3055\u308c\u308b\u306e\u3067\u30c1\u30a7\u30c3\u30af\u30a2\u30a4\u30b3\u30f3\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30a2\u30a4\u30b3\u30f3\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u306d\u3002 \u4e00\u77ac\u3001 Loading... \u3068\u8868\u793a\u3055\u308c\u305f\u5f8c\u306b\u3001 Log out \u30dc\u30bf\u30f3\u3060\u3051\u306e\u7d20\u6734\u306a\u753b\u9762\u306b\u623b\u308c\u3070\u6210\u529f\u3067\u3059\u3002 Log out \u3092\u9078\u629e\u3057\u3066\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u4ee5\u964d\u3082\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7de8\u96c6\u3059\u308b\u524d\u306b\u306f\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u304b\u3089\u884c\u3044\u307e\u3059\u3002\u7279\u306b\u30d1\u30fc\u30c8\uff14\u3067 audience \u3092\u8a2d\u5b9a\u3059\u308b\u969b\u306b\u306f\u4e8b\u524d\u306b\u30ed\u30b0\u30a2\u30a6\u30c8\u304c\u5fc5\u9808\u3067\u3059\u3002","title":"Create React App\u3092\u4f7f\u3063\u3066\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b"},{"location":"setup/cloud9/","text":"Cloud9\u306b\u3088\u308b\u74b0\u5883\u306e\u6e96\u5099 Cloud9\u3068\u306f AWS\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30af\u30e9\u30a6\u30c9\u4e0a\u3067\u52d5\u304f\uff64\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u74b0\u5883\u3067\u3059\uff61 \u30b3\u30fc\u30c9\u30a8\u30c7\u30a3\u30bf\u3068\u958b\u767a\u74b0\u5883\u304cWeb\u4e0a\u304b\u3089\u4f7f\u3048\u307e\u3059\uff61 AWS CLI\u3068AWS SAM CLI\u306a\u3069AWS\u3092\u4f7f\u3063\u305f\u958b\u767a\u306b\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u3084\u57fa\u672c\u7684\u306a\u8a00\u8a9e\u74b0\u5883\u304c \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u3067\u3059\uff61 AWS Cloud9\uff08Cloud IDE \u3067\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3001\u5b9f\u884c\u3001\u30c7\u30d0\u30c3\u30b0\uff09| AWS \u306a\u305c\u4eca\u56deCloud9\u3092\u4f7f\u3046\u304b \u6700\u521d\u304b\u3089AWS\u3092\u4f7f\u3063\u305f\u958b\u767a\u306b\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b \u74b0\u5883\u306e\u6e96\u5099\u3068\u3044\u3046\u672c\u8cea\u7684\u3067\u306a\u3044\u6240\u3067\u3064\u307e\u3065\u3044\u3066\u6b32\u3057\u304f\u306a\u3044 \u30cf\u30f3\u30ba\u30aa\u30f3\u306e\u6027\u8cea\u4e0a\u30ed\u30fc\u30ab\u30eb\u30de\u30b7\u30f3\u3092\u7d71\u4e00\u3067\u304d\u306a\u3044 \u5f0a\u793e\u3068\u306f\u7121\u95a2\u4fc2\u3067\u3059\u304c\uff64\u5b9f\u969b\u306e\u958b\u767a\u73fe\u5834\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u4f8b\u3082\u3042\u308a\u307e\u3059\uff61 \u30e6\u30fc\u30b6\u30fc\u4f01\u696d\u306b\u304a\u3051\u308b\u30b5\u30fc\u30d0\u30ec\u30b9\u30b7\u30b9\u30c6\u30e0\u3078\u306e\u79fb\u884c/JAWS DAYS2018 Cloud9 Environment\u306e\u4f5c\u6210 Warning \u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u306e\u53f3\u4e0a\u3067\uff64 \u30ea\u30fc\u30b8\u30e7\u30f3\u304c \u6771\u4eac(ap-northeast-1) \u306b\u306a\u3063\u3066\u3044\u308b\u4e8b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\uff61 Info Safari\u3067Cloud9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306b\u306f\uff64 \u30b5\u30a4\u30c8\u8d8a\u3048\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3092\u9632\u3050 \u3068 \u3059\u3079\u3066\u306eCookie\u3092\u30d6\u30ed\u30c3\u30af \u3092\u7121\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff61 Mac \u306e Safari \u3067 Cookie \u3068 Web \u30b5\u30a4\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3059\u308b AWS Cloud9 \u3092\u958b\u304f Create environment \u3092\u9078\u629e\u3057\u307e\u3059\uff61 \u74b0\u5883\u3092\u8a2d\u5b9a\u3057\uff64 Next step \u3092\u9078\u629e\u3057\u307e\u3059\uff61 Name: hands-on Description: \u4f55\u3082\u5165\u529b\u3057\u306a\u3044 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u306e\u307e\u307e\uff64 Next step \u3092\u9078\u629e\u3057\u307e\u3059\uff61 Environment type: Create a new instance for environment (EC2) Instance type: t2.micro (1 GiB RAM + 1 vCPU) Platform: Amazon Linux Cost-saving setting: Afrer 30minutes(default) IAM role: AWSServiceRoleForAWSCloud9 \u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\uff64 Create environment \u3092\u9078\u629e\u3057\u307e\u3059\uff61 Cloud9\u304c\u8d77\u52d5\u3057\u307e\u3059\uff61 Info Cloud9\u3092\u958b\u3044\u3066\u3044\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u306f\uff64\u518d\u5ea6 AWS Cloud9 \u3092\u958b\u304d\uff64 hands-on \u306e Open IDE \u3092\u9078\u629e\u3057\u307e\u3059\uff61 nodenv(anyenv)\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u591a\u8a00\u8a9e\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u958b\u767a\u74b0\u5883\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30c4\u30fc\u30eb anyenv \u3092\u4f7f\u3063\u3066\u3001Node.js\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30c4\u30fc\u30eb nodenv \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 \u672c\u30cf\u30f3\u30ba\u30aa\u30f3\u3067\u306f\u3001\u73fe\u6642\u70b9\u3067\u306eNode.js LTS\u7248\u306e 12.16.3 \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 git clone https://github.com/anyenv/anyenv ~/.anyenv echo 'export PATH=\" $HOME /.anyenv/bin: $PATH \"' >> ~/.bash_profile echo 'eval \"$(anyenv init -)\"' >> ~/.bash_profile ~/.anyenv/bin/anyenv init exec $SHELL -l anyenv install --init anyenv install nodenv exec $SHELL -l NODE_VERSION=12.16.3 nodenv install ${ NODE_VERSION } nodenv global ${ NODE_VERSION } exec $SHELL -l \u9014\u4e2d\u3067\u4f55\u56de\u304b\u5b9f\u884c\u3057\u3066\u3044\u308b exec $SHELL -l \u306f\u30b7\u30a7\u30eb\u3092\u518d\u8aad\u307f\u8fbc\u307f\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002 AWS\u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u8a2d\u5b9a \u30cf\u30f3\u30ba\u30aa\u30f3\u3067\u306fAWS CLI\u3092\u4f7f\u3044\uff64\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067AWS\u3092\u64cd\u4f5c\u3057\u307e\u3059\uff61 \u5229\u7528\u3059\u308bAWS\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u70ba\u306b\uff64\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u307e\u3059\uff61 echo 'AWS_DEFAULT_REGION=\"ap-northeast-1\"' >> ~/.bashrc source ~/.bashrc \u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff61 echo ${ AWS_DEFAULT_REGION } aws ec2 describe-instances --query \\ 'sort_by(Reservations[].Instances[].{Tags:Tags[?Key==`Name`].Value|[0],InstanceType:InstanceType,State:State.Name},&Tags)' --output table (\u4f8b) ap-northeast-1 ----------------------------------------------------------------------------------------- | DescribeInstances | +--------------+----------+-------------------------------------------------------------+ | InstanceType | State | Tags | +--------------+----------+-------------------------------------------------------------+ | t2.micro | running | aws-cloud9-hands-on-[Random alphanumeric] | +--------------+----------+-------------------------------------------------------------+","title":"\u74b0\u5883\u69cb\u7bc9"},{"location":"setup/cloud9/#cloud9","text":"","title":"Cloud9\u306b\u3088\u308b\u74b0\u5883\u306e\u6e96\u5099"},{"location":"setup/cloud9/#cloud9_1","text":"AWS\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30af\u30e9\u30a6\u30c9\u4e0a\u3067\u52d5\u304f\uff64\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u74b0\u5883\u3067\u3059\uff61 \u30b3\u30fc\u30c9\u30a8\u30c7\u30a3\u30bf\u3068\u958b\u767a\u74b0\u5883\u304cWeb\u4e0a\u304b\u3089\u4f7f\u3048\u307e\u3059\uff61 AWS CLI\u3068AWS SAM CLI\u306a\u3069AWS\u3092\u4f7f\u3063\u305f\u958b\u767a\u306b\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u3084\u57fa\u672c\u7684\u306a\u8a00\u8a9e\u74b0\u5883\u304c \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u3067\u3059\uff61 AWS Cloud9\uff08Cloud IDE \u3067\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3001\u5b9f\u884c\u3001\u30c7\u30d0\u30c3\u30b0\uff09| AWS","title":"Cloud9\u3068\u306f"},{"location":"setup/cloud9/#cloud9_2","text":"\u6700\u521d\u304b\u3089AWS\u3092\u4f7f\u3063\u305f\u958b\u767a\u306b\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b \u74b0\u5883\u306e\u6e96\u5099\u3068\u3044\u3046\u672c\u8cea\u7684\u3067\u306a\u3044\u6240\u3067\u3064\u307e\u3065\u3044\u3066\u6b32\u3057\u304f\u306a\u3044 \u30cf\u30f3\u30ba\u30aa\u30f3\u306e\u6027\u8cea\u4e0a\u30ed\u30fc\u30ab\u30eb\u30de\u30b7\u30f3\u3092\u7d71\u4e00\u3067\u304d\u306a\u3044 \u5f0a\u793e\u3068\u306f\u7121\u95a2\u4fc2\u3067\u3059\u304c\uff64\u5b9f\u969b\u306e\u958b\u767a\u73fe\u5834\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u4f8b\u3082\u3042\u308a\u307e\u3059\uff61 \u30e6\u30fc\u30b6\u30fc\u4f01\u696d\u306b\u304a\u3051\u308b\u30b5\u30fc\u30d0\u30ec\u30b9\u30b7\u30b9\u30c6\u30e0\u3078\u306e\u79fb\u884c/JAWS DAYS2018","title":"\u306a\u305c\u4eca\u56deCloud9\u3092\u4f7f\u3046\u304b"},{"location":"setup/cloud9/#cloud9-environment","text":"Warning \u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u306e\u53f3\u4e0a\u3067\uff64 \u30ea\u30fc\u30b8\u30e7\u30f3\u304c \u6771\u4eac(ap-northeast-1) \u306b\u306a\u3063\u3066\u3044\u308b\u4e8b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\uff61 Info Safari\u3067Cloud9\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306b\u306f\uff64 \u30b5\u30a4\u30c8\u8d8a\u3048\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\u3092\u9632\u3050 \u3068 \u3059\u3079\u3066\u306eCookie\u3092\u30d6\u30ed\u30c3\u30af \u3092\u7121\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff61 Mac \u306e Safari \u3067 Cookie \u3068 Web \u30b5\u30a4\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3059\u308b AWS Cloud9 \u3092\u958b\u304f Create environment \u3092\u9078\u629e\u3057\u307e\u3059\uff61 \u74b0\u5883\u3092\u8a2d\u5b9a\u3057\uff64 Next step \u3092\u9078\u629e\u3057\u307e\u3059\uff61 Name: hands-on Description: \u4f55\u3082\u5165\u529b\u3057\u306a\u3044 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u306e\u307e\u307e\uff64 Next step \u3092\u9078\u629e\u3057\u307e\u3059\uff61 Environment type: Create a new instance for environment (EC2) Instance type: t2.micro (1 GiB RAM + 1 vCPU) Platform: Amazon Linux Cost-saving setting: Afrer 30minutes(default) IAM role: AWSServiceRoleForAWSCloud9 \u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\uff64 Create environment \u3092\u9078\u629e\u3057\u307e\u3059\uff61 Cloud9\u304c\u8d77\u52d5\u3057\u307e\u3059\uff61 Info Cloud9\u3092\u958b\u3044\u3066\u3044\u308b\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u9589\u3058\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u306f\uff64\u518d\u5ea6 AWS Cloud9 \u3092\u958b\u304d\uff64 hands-on \u306e Open IDE \u3092\u9078\u629e\u3057\u307e\u3059\uff61","title":"Cloud9 Environment\u306e\u4f5c\u6210"},{"location":"setup/cloud9/#nodenvanyenv","text":"\u591a\u8a00\u8a9e\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u958b\u767a\u74b0\u5883\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30c4\u30fc\u30eb anyenv \u3092\u4f7f\u3063\u3066\u3001Node.js\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30c4\u30fc\u30eb nodenv \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 \u672c\u30cf\u30f3\u30ba\u30aa\u30f3\u3067\u306f\u3001\u73fe\u6642\u70b9\u3067\u306eNode.js LTS\u7248\u306e 12.16.3 \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 git clone https://github.com/anyenv/anyenv ~/.anyenv echo 'export PATH=\" $HOME /.anyenv/bin: $PATH \"' >> ~/.bash_profile echo 'eval \"$(anyenv init -)\"' >> ~/.bash_profile ~/.anyenv/bin/anyenv init exec $SHELL -l anyenv install --init anyenv install nodenv exec $SHELL -l NODE_VERSION=12.16.3 nodenv install ${ NODE_VERSION } nodenv global ${ NODE_VERSION } exec $SHELL -l \u9014\u4e2d\u3067\u4f55\u56de\u304b\u5b9f\u884c\u3057\u3066\u3044\u308b exec $SHELL -l \u306f\u30b7\u30a7\u30eb\u3092\u518d\u8aad\u307f\u8fbc\u307f\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002","title":"nodenv(anyenv)\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"},{"location":"setup/cloud9/#aws","text":"\u30cf\u30f3\u30ba\u30aa\u30f3\u3067\u306fAWS CLI\u3092\u4f7f\u3044\uff64\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067AWS\u3092\u64cd\u4f5c\u3057\u307e\u3059\uff61 \u5229\u7528\u3059\u308bAWS\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u70ba\u306b\uff64\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u307e\u3059\uff61 echo 'AWS_DEFAULT_REGION=\"ap-northeast-1\"' >> ~/.bashrc source ~/.bashrc \u8a2d\u5b9a\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff61 echo ${ AWS_DEFAULT_REGION } aws ec2 describe-instances --query \\ 'sort_by(Reservations[].Instances[].{Tags:Tags[?Key==`Name`].Value|[0],InstanceType:InstanceType,State:State.Name},&Tags)' --output table (\u4f8b) ap-northeast-1 ----------------------------------------------------------------------------------------- | DescribeInstances | +--------------+----------+-------------------------------------------------------------+ | InstanceType | State | Tags | +--------------+----------+-------------------------------------------------------------+ | t2.micro | running | aws-cloud9-hands-on-[Random alphanumeric] | +--------------+----------+-------------------------------------------------------------+","title":"AWS\u30ea\u30fc\u30b8\u30e7\u30f3\u306e\u8a2d\u5b9a"}]}